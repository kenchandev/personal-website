-
  var experiences = [
    {
      title: 'Civic Graph',
      alias: 'civic-graph',
      href: 'https://www.civicgraph.io/',
      caption: 'A crowdsourced, network visualization of the civic technology community. Built at Microsoft.',
      role: 'Full-Stack Engineer',
      duration: {
        start: 'May 2014',
        end: 'July 2015'
      },
      company: 'Microsoft',
      pressCoverage: [
        {
          id: 'politico',
          publisher: 'Politico',
          articleUrl: 'https://www.politico.com/states/new-york/city-hall/story/2015/02/civic-tech-contestants-range-from-microsoft-to-mta-and-housing-087247'
        },
        {
          id: 'omidyar-network',
          publisher: 'Omidyar Network',
          articleUrl: 'https://www.omidyar.com/insights/building-civic-tech-sector-last'
        },
        {
          id: 'government-technology',
          publisher: 'Government Technology, a Division of e.Republic',
          articleUrl: 'http://www.govtech.com/data/Microsoft-Civic-Graph-Charts-the-New-World-of-Civic-Tech.html'
        },
        {
          id: 'kantar',
          publisher: 'Information is Beautiful',
          articleUrl: 'https://www.informationisbeautifulawards.com/showcase/724-civic-graph'
        },
        {
          id: 'knight-foundation',
          publisher: 'Knight Foundation',
          articleUrl: 'https://knightfoundation.org/articles/engaging-citizens-government-civic-life'
        },
        {
          id: 'personal-democracy-media',
          publisher: 'Personal Democracy Media',
          articleUrl: 'https://personaldemocracy.com/media/civic-graph-put-yourself-map'
        }
      ],
      technologies: [
        'AngularJS',
        'D3.js',
        'Leaflet.js',
        'Node.js',
        'Flask',
        'MySQL',
        'Microsoft Azure'
      ],
      description: 'Easily search and filter for influencers, funders and organizations collaborating on civic technology projects and initiatives that aim to solve the problems of the present and future.',
      renderHomepageCallback: "renderCivicGraphHomepage"
    },
    {
      title: 'Smart Alec',
      alias: 'smart-alec',
      href: 'https://www.smartalec.com/',
      caption: 'A tutoring marketplace for students to book rigorously vetted tutors for in-person, private lessons.',
      role: 'Lead Front-End Engineer',
      duration: {
        start: 'August 2015',
        end: 'Present'
      },
      company: 'Smart Alec',
      pressCoverage: [
        {
          id: 'cheddar',
          publisher: 'Cheddar',
          articleUrl: 'https://cheddar.vhx.tv/cheddar-archive/videos/cheddar-cheddar-live-s14-e022317-j-full-mezz-hd-en-us'
        },
        {
          id: 'alley-watch',
          pulbisher: 'Alley Watch',
          articleUrl: 'http://www.alleywatch.com/2016/11/nyc-startup-smart-alec-actually-want-around/'
        },
        {
          id: 'metro',
          publisher: 'Metro',
          articleUrl: 'http://www.metro.us/lifestyle/tutoring-on-demand/zsJpex---tZDKJV3Akej7Q/'
        },
        {
          id: 'built-in-nyc',
          publisher: 'Built In NYC',
          articleUrl: 'http://www.builtinnyc.com/2016/04/20/nyc-startups-beta'
        },
        {
          id: 'technical-ly',
          publisher: 'Technical.ly',
          articleUrl: 'http://technical.ly/brooklyn/2015/07/24/quedify-uber-tutoring-nathan-kane/'
        },
        {
          id: 'huffington-post',
          publisher: 'Huffington Post',
          articleUrl: 'http://www.huffingtonpost.com/entry/57e43e5be4b00267764fbc14'
        },
        {
          id: 'nymetro-parents',
          publisher: 'NY Metro Parents',
          articleUrl: 'http://www.nymetroparents.com/rockland/article/Rockland-Schools-and-Education-Guide'
        },
        {
          id: 'business-insider',
          publisher: 'Business Insider',
          articleUrl: 'https://www.businessinsider.com/wework-recruiting-testing-invite-only-startup-incubator-area-51-new-york-2017-12'
        }
      ],
      technologies: [
        'AngularJS',
        'Node.js',
        'Redis',
        'Neo4j',
        'Amazon Web Services',
        'Logentries',
        'Codeship'
      ],
      projectFeatures: [
        {
          label: 'Advanced Scheduler',
          id: 'advanced-scheduler'
        },
        {
          label: 'Chat Client + Customizable Rich Cards',
          id: 'chat-client'
        },
        {
          label: 'Seamless Booking Process',
          id: 'booking-process'
        },
        {
          label: 'Multiple Time Zones Support',
          id: 'time-zones'
        },
        {
          label: 'Beautiful Public Profiles for Tutors',
          id: 'tutor-profile'
        }
      ],
      renderHomepageCallback: "renderSmartAlecHomepage",
    }
  ];

mixin experienceInfo(i)
  -
    var experience = experiences[i],
      modalId = `press-coverage-${experience.alias}`,
      browserSvg = `<file-svg src="assets/images/browser.svg" data-callback="${ experience.renderHomepageCallback }" data-target-id="Browser" />`,
      mobileSvg = `<file-svg src="assets/images/mobile.svg" data-callback="${ experience.renderHomepageCallback }" data-target-id="Mobile"  />`;

  div.experience(class=`experience--${experience.alias}`)
    h2.experience__title(id=experience.alias)
      a.permalink.visually-hidden(href=`#${experience.alias}`, aria-label=`${experience.title} Permalink`)
      span(tabindex="0")
        span.visually-hidden Project Name
        span= experience.title
    div.row
      div.col-xs-12.col-sm-5.col-md-5.col-lg-5
        p.experience__caption(tabindex="0")
          span.visually-hidden Brief Overview Of This Project
          span= experience.caption
        p.experience__role(tabindex="0")
          span.visually-hidden Ken's Role At #{experience.company} For This Project and How Long He Actively Worked On This Project
          span= `${experience.role} (${experience.duration.start} - ${experience.duration.end})`
        p.experience__technologies(tabindex="0")
          span.visually-hidden Technologies Used For This Project
          span= experience.technologies.join(', ')
      div.col-sm-1.col-md-1.col-lg-1
      div.col-xs-12.col-sm-6.col-md-6.col-lg-6
        if experience.description
          p.experience__description(tabindex="0")
            span.visually-hidden Additional Information About This Project
            span= experience.description
        else if experience.projectFeatures
          ul.experience__project-features(tabindex="0", aria-label="Project Features")
            each feature, i in experience.projectFeatures
              li.experience__project-features__item
                a(id=`pf-${feature.id}`, href="javascript:void(0)")= feature.label
                if i === experience.projectFeatures.length - 1
                  a.visually-hidden.repeat-features(href=`#pf-${experience.projectFeatures[0].id}`, onclick="event.preventDefault();", aria-labelledby="rf-label") â†³
                  span.visually-hidden#rf-label Press Enter to Repeat Features
        ul.experience__actions(tabindex="0", aria-label="Additional Links")
          li.experience__actions__item
            a.btn.btn--primary(href=experience.href, target="_blank", rel="noreferrer noopener") Visit Project
          li.experience__actions__item
            a.btn.btn--secondary(href="javascript:void(0)", data-modal-id=modalId, data-modal-open) Press Coverage
    div.viewport-device(role="figure", tabindex="0", aria-label=`Screenshots of ${experience.title}`)
      div.browser !{browserSvg}
      div.mobile !{mobileSvg}
      div.lds-ring.lds-ring--blue
        div
        div
        div
        div
    div.experience__press-coverage(id=modalId, data-modal-label="List of Press Coverage")
      ul.coverage-list(class=`coverage-list--${experience.alias}`, tabindex="0", aria-label="List of Press Coverage")
        each press in experience.pressCoverage
          li.coverage-list__item
            a(href=press.articleUrl, aria-labelledby=`${experience.alias}-${press.id}`)
              span.visually-hidden(id=`${experience.alias}-${press.id}`) Article by #{press.publisher}
              img(src=require(`./assets/images/${press.id}.svg`), alt=press.publisher, aria-hidden="true")