/// Gets a value from a map.
/// @author Hugo Giraudel
/// @param {map} $map Map.
/// @param {string} $keys Key(s).
/// @return {string} Value.
@function val($map, $keys...) {
  @if nth($keys, 1) == null {
    $keys: remove-nth($keys, 1);
  }

  @each $key in $keys {
    $map: map-get($map, $key);
  }

  @return $map;
}

/// Gets a font value.
/// @param {string} $keys Key(s).
/// @return {string} Value.
@function _font($keys...) {
  @return val($font, $keys...);
}

/// Gets a palette value.
/// @param {string} $keys Key(s).
/// @return {string} Value.
@function _palette($keys...) {
  @return val($palette, $keys...);
}

/// Gets a palette value.
/// @param {string} $keys Key(s).
/// @return {string} Value.
@function _btn($keys...) {
  @return val($btn, $keys...);
}

/// Generates `$grid` map value.
/// @param {string} $gutter-width Gutter Width.
/// @param {string} $outer-margin Outer Margin.
/// @param {map} $breakpoints Breakpoints.
/// @return {map} Value.
@function _grid($gutter-width, $outer-margin, $breakpoints) {
  $xs-min: map-get($breakpoints, xs);
  $sm-min: map-get($breakpoints, sm);
  $md-min: map-get($breakpoints, md);
  $lg-min: map-get($breakpoints, lg);

  $grid: (
    gutter-width: $gutter-width,
    outer-margin: $outer-margin,
    gutter-compensation: calc((#{$gutter-width} * 0.5) * -1),
    half-gutter-width: calc(#{$gutter-width} * 0.5),
    xs-min: $xs-min,
    sm-min: $sm-min,
    md-min: $md-min,
    lg-mid: $lg-min,
    screen-xs-min: #{$xs-min}em,
    screen-sm-min: #{$sm-min}em,
    screen-md-min: #{$md-min}em,
    screen-lg-min: #{$lg-min}em,
    container-sm: calc(#{$sm-min} + #{$gutter-width}),
    container-md: calc(#{$md-min} + #{$gutter-width}),
    container-lg: calc(#{$lg-min} + #{$gutter-width})
  );

  @return $grid;
}
